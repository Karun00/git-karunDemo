<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
    <script>
         if (document.location.hash)  document.location.hash = "";
     </script>
    <meta charset="utf-8" />
    <title>Integrated Port Management System</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />
    <meta content="" name="description" />
    <meta content="" name="author" />
    <meta name="MobileOptimized" content="320">
    @Styles.Render("~/CSS/GlobalMandatory")

    @Scripts.Render("~/bundles/IpmsLayoutCorePlugins")
    @Scripts.Render("~/bundles/KnockoutScripts")
    <script src="~/Scripts/Application/IpmsRoot.js"></script>
    <script src="~/Scripts/Application/Model/NotificationsModel.js"></script>
    <script src="~/Scripts/Application/ViewModel/NotificationsViewModel.js"></script>
    <script src="~/Scripts/Application/Model/ModuleModel.js"></script>
    <script src="~/Scripts/Application/ViewModel/ModuleViewModel.js"></script>
    <script src="~/Scripts/Lib/moment.js"></script>
    <script src="~/Scripts/Lib/jquery-ui.js" type="text/javascript"></script>
    <script src="~/Scripts/Lib/jquery.ui.chatbox.js"></script>
    <script src="~/Scripts/Lib/jquery.ui.chatbox1.js"></script>
    <script src="~/Scripts/Lib/chat-window.js"></script>
    <script src="~/Scripts/jquery.signalR-2.1.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/Lib/opentip.js"></script>
    <script src="~/Scripts/Lib/adapter-jquery.js"></script> 
    <link rel="shortcut icon" href="@Url.Content("~/Content/Images/favicon.ico")" />
    @*<link href="Content/Styles/jquery.fileupload-ui.css" rel="stylesheet"/>*@


           <script type="text/javascript">
	           toastr.options.closeButton = true;
	           toastr.options.positionClass = "toast-top-right";

	           var RegExpForDateTime = /(\d{2})-(\d{2})-(\d{4}) (\d{2}:(\d{2}))/;
	           var ReplaceFormat = "$2/$1/$3 $4:$5";
	           var RegExpDate = /(\d{2})-(\d{2})-(\d{4})/;

            
	           function checkDate(field) {
	           	var allowBlank = true;
	           	var minYear = 1902;
	           	//var maxYear = (new Date()).getFullYear();
	           	var IsLeapYear = false;
	           	var errorMsg = "";
	           	// regular expression to match required date format 'dd/mm/yyyy'
	           	//re = /^(\d{1,2})\-(\d{1,2})\-(\d{4})$/;
	           	re = /^(\d{4})\-(\d{1,2})\-(\d{1,2})$/;
	           	if(field.value==undefined){
	           		field.value=field.val();
	           	}
	           	if (field.value != '') {
	           		field.value=field.value.replace(/ /g, '');
	           		var dinput=field.value;
	           		if (dinput.length<8) {
	           			errorMsg = "Invalid date format: " + field.value;
	           			//alert(errorMsg);
	           			toastr.warning("Invalid date format");
	           			//field.value="";
	           			setTimeout(function () {
	           				field.focus();
	           			}, 0);
	           			return false;
	           		}
               
	           		//else {
	           		//    field.focus();
	           		//    return false;
	           		//}
	           		//re1 = /^(\d{1,2})\-(\d{1,2})\-(\d{4})$/g;
	           		re1 = /^(\d{4})\-(\d{1,2})\-(\d{1,2})$/g;
                
	           		var result=field.value.match(re1);
                
	           		if ((result == null) && (field.value.length!=10)) {  
	           			// if (!(field.value==result[0])) {
	           			//if (!field.value.match(re)) {
	           			if (field.value.length==8) {  
	           				re2=/-/g;
	           				var c =field.value.match(re2);
	           				if (c== null || c.length<2)    
	           				{formatinput(field);}
	           				else {
	           					errorMsg = "Invalid date format: " + field.value;
	           					//alert(errorMsg); 
	           					toastr.warning("Invalid date format");
	           					setTimeout(function () {
	           						field.focus();
	           					}, 0);
	           					return false;
	           				}
	           			}
	           			else {
	           				errorMsg = "Invalid date format: " + field.value;
	           				toastr.warning("Invalid date format");
	           				setTimeout(function () {
	           					field.focus();
	           				}, 0);
	           				return false;
	           			}
	           		}
	           		else {
	           			if (field.value.length==10) {  
	           				re2=/-/g;
	           				var c =field.value.match(re2);
	           				if (c== null || c.length<2)    
	           				{formatinput(field);}
	           				//else {
	           				//    errorMsg = "Invalid date format: " + field.value;
	           				// toastr.warning("Invalid date format");
	           				//    field.focus();
	           				//    return false;
	           				//}
	           			}
	           			//else {
	           			//    errorMsg = "Invalid date format: " + field.value;
	           			// toastr.warning("Invalid date format");
	           			//    field.focus();
	           			//    return false;
	           			//}
	           		}
	           		// }
	           		// formatinput(field);
	           		//var dvalue=formatinput(field);
	           		if (field.value.match(re)) {
    
                
	           			if (regs = field.value.match(re)) {
	           				//if (regs = dvalue.value.match(re)) {
	           				if ((regs[1] % 4) == 0) {
	           					IsLeapYear = true;
	           				}
	           				if (regs[3] < 1 || regs[3] > 31) {
	           					errorMsg = "Invalid value for day: " + regs[3];
	           				} else if (regs[2] < 1 || regs[2] > 12) {
	           					errorMsg = "Invalid value for month: " + regs[2];
	           				}
                
	           					//else if (regs[3] < minYear || regs[3] > maxYear) {
	           					//    errorMsg = "Invalid value for year: " + regs[3] + " - must be between " + minYear + " and " + maxYear;
	           					//}

	           				else if (regs[1] < minYear) {
	           					errorMsg = "Invalid value for year: " + regs[1] + " - must be between " + minYear+"";
	           				}
	           				if (IsLeapYear == true) {
	           					if (regs[2] == 2 && regs[3] > 29) {
	           						errorMsg = "Invalid value for day: " + regs[3];
	           					}
	           				}
	           				else {
	           					if (regs[2] == 2 && regs[3] > 28) {
	           						errorMsg = "Invalid value for day: " + regs[3];
	           					}
	           				} 

	           			} else {
	           				errorMsg = "Invalid date format: " + field.value;
	           			}
	           		}
	           	} else if (!allowBlank) {
	           		errorMsg = "Empty date not allowed!";
	           	}

	           	if (errorMsg != "") {
	           		toastr.warning("Invalid date format");
	           		setTimeout(function () {
	           			field.focus();
	           		}, 0);
	           		return false;
	           	}
	           	// formatinput(field);
	           	return true;
	           }

	           function checkDateTime(field) {
		           var allowBlank = true;
		           var minYear = 1902;
		           //var maxYear = (new Date()).getFullYear();
		           var IsLeapYear = false;
		           var errorMsg = "";

		           // regular expression to match required date format 'dd/mm/yyyy'
		           //re = /^(\d{1,2})\-(\d{1,2})\-(\d{4}) ([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;
		           re = /^(\d{4})\-(\d{1,2})\-(\d{1,2}) ([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;

		           if (field.value != '') {
			           //field.value=field.value.replace(/ /g, '');
			           field.value = field.value.trim();
			           var dinput = field.value;
			           //if (dinput.length<8) {
			           if (dinput.length < 12) {
				           errorMsg = "Invalid date time format: " + field.value;
				           toastr.warning("Invalid date format");
				           //field.value="";
				           setTimeout(function() {
					           field.focus();
				           }, 0);
				           return false;
			           }
			           //re1 = /^(\d{1,2})\-(\d{1,2})\-(\d{4}) ([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/g;
			           re1 = /^(\d{4})\-(\d{1,2})\-(\d{1,2}) ([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/g;

			           var result = field.value.match(re1);

			           if ((result == null) && (field.value.length != 16)) {
				           if (field.value.length == 12) {
					           re2 = /-/g;
					           re3 = /\s/g;
					           var t = field.value.match(re3);
					           var c = field.value.match(re2);
					           if (c == null || c.length < 2 || t == null || t < 1) {
						           formatDateTime(field);
					           } else {
						           errorMsg = "Invalid date format: " + field.value;
						           toastr.warning("Invalid date format");
						           setTimeout(function() {
							           field.focus();
						           }, 0);
						           return false;
					           }
				           } else {
					           errorMsg = "Invalid date format: " + field.value;
					           toastr.warning("Invalid date format");
					           setTimeout(function() {
						           field.focus();
					           }, 0);
					           return false;
				           }
			           } else {
				           if (field.value.length == 12) {
					           re2 = /-/g;
					           re3 = /\s/g;
					           var t = field.value.match(re3);
					           var c = field.value.match(re2);
					           if (c == null || c.length < 2 || t == null || t < 1) {
						           formatDateTime(field);
					           }
				           }
			           }

			           if (field.value.match(re)) {


				           if (regs = field.value.match(re)) {
					           //if (regs = dvalue.value.match(re)) {
					           if ((regs[1] % 4) == 0) {
						           IsLeapYear = true;
					           }
					           if (regs[3] < 1 || regs[3] > 31) {
						           errorMsg = "Invalid value for day: " + regs[3];
					           } else if (regs[2] < 1 || regs[2] > 12) {
						           errorMsg = "Invalid value for month: " + regs[2];
					           }
//else if (regs[3] < minYear || regs[3] > maxYear) {
					           //    errorMsg = "Invalid value for year: " + regs[3] + " - must be between " + minYear + " and " + maxYear;
					           //}
					           else if (regs[1] < minYear) {
						           errorMsg = "Invalid value for year: " + regs[1] + " - must be between " + minYear + "";
					           }

					           if (IsLeapYear == true) {
						           if (regs[2] == 2 && regs[3] > 29) {
							           errorMsg = "Invalid value for day: " + regs[1];
						           }
					           } else {
						           if (regs[2] == 2 && regs[3] > 28) {
							           errorMsg = "Invalid value for day: " + regs[1];
						           }
					           }

				           } else {
					           errorMsg = "Invalid date time format: " + field.value;
				           }
			           } else {
				           errorMsg = "Invalid date time format: " + field.value;
			           }
		           } else if (!allowBlank) {
			           errorMsg = "Empty date not allowed!";
		           }

		           if (errorMsg != "") {
			           toastr.warning("Invalid date format");
			           setTimeout(function() {
				           field.focus();
			           }, 0);
			           return false;
		           }

		           if (errorMsg == "") {
		           	var currentdate = moment(new Date()).format('YYYY-MM-DD HH:mm');
		           	if (currentdate < field.value) {
		           		toastr.warning("Date is greater than Current Date and Time");
		           		setTimeout(function() {
		           			field.focus();
		           		}, 0);
		           		return false;
				           
		           	}
      
		           }
		           // formatinput(field);
		           return true;
	           }

	           function formatDateTime(field)
	           {
           
	           	var dvalue=field.value;
	           	var fvalue="";
	           	for (var i = 0; i < 12; i++) {
	           		//if(i>1 && i%2==0 && i<7)
	           		if((i==4)||(i==6))
	           			fvalue=fvalue.concat("-"+dvalue[i]);                     
	           		else if(i==8) 
	           			fvalue=fvalue.concat(" "+dvalue[i]); 
	           		else if (i==10)
	           			fvalue=fvalue.concat(":"+dvalue[i]);
	           		else  
	           			fvalue=fvalue=fvalue.concat(dvalue[i]);
	           }
	           	field.value=fvalue;
	           	return fvalue;
	           }

	           function formatinput(field)
	           {
            
	           	var dvalue=field.value;
	           	var fvalue="";
	           	for (var i = 0; i < 8; i++) {
	           		//if(i>1 && i%2==0 && i<7)
	           		if((i==4)||(i==6))
	           			fvalue=fvalue.concat("-"+dvalue[i]);                     
	           		else
	           			fvalue=fvalue.concat(dvalue[i]);
	           	}
	           	field.value=fvalue;
	           	return fvalue;
	           }

	           function OnfocusDateTime(field) {

		           if (field.value != "") {
			           var dvalue = field.value;
			           var fvalue = "";
			           fvalue = dvalue.replace(/-| |:/g, '');
			           field.value = fvalue;
			           return fvalue;
		           }

	           }

	           function OnfocusDate(field)
	           {
            
	           	if(field.value!="")
	           	{
	           		var dvalue=field.value;
	           		var fvalue="";
	           		fvalue=dvalue.replace(/-/g,'');
	           		field.value=fvalue;
	           		return fvalue;
	           	}
           
	           }


</script>

	<style type="text/css">
        #emaildisplay, #smsdisplay, #sndisplay {
            display: none;
        }
/*Below code is already exist in toastr. but that is not working after Hosting of application, hence loading css has been placed here */
.loading-content {
	 height: 100px;
	 width: 400px;
	 background: #aaa;
	 padding: 5px; 
}

.loading-loader { 
	background-image: url(/Content/Images/gif-load.gif);
            height: 80px;
	width: 80px;
}

    </style>
</head>
  @*  ondragstart="return false" draggable="false" oncopy="return false" onpaste="return false" oncut="return false"*@
<body id="classadd" class="page-header-fixed page-footer-fixed page-sidebar-fixed">

    @{
        var IsFirstTimeLogin = "N";

        if (!string.IsNullOrEmpty(ViewBag.IsFirstTimeLogin))
        {
            IsFirstTimeLogin = ViewBag.IsFirstTimeLogin;

        }
    }


    @{Html.RenderPartial(Url.Content("~/Views/Shared/_IPMSHeader.cshtml"));}


    <section class="page-container">
        <!-- KEEP it in _IPMSLeftNav.cshtml -->
        @{
            if (Request.IsAuthenticated && IsFirstTimeLogin == "N")
            {

                Html.RenderPartial(Url.Content("~/Views/Shared/_IPMSSideNavigation.cshtml"));
                Html.RenderPartial(Url.Content("~/Views/Shared/_IPMSFooter.cshtml"));


            }
        }
        <!-- END _IPMSLeftNav.cshtml -->
        <div class="page-content-wrapper ">
            <div id="divPageContent" class="page-content">
                @RenderBody()


            </div>
        </div>
    </section>

  


    @RenderSection("JavaScript", required: false)
    @RenderSection("scripts", required: false)
    <script>

        IPMSROOT.rootPath = '@Url.Content("~")';
     
        var IPMSDateTimeFormat = '@IPMS.Domain.GlobalConstants.IPMSDateTimeFormat';
        var IPMSTimeFormat = '@IPMS.Domain.GlobalConstants.IPMSTimeFormat';
     
        var isAuthenticated = "@(Request.IsAuthenticated)";
        jQuery(document).ready(function () {
            App.init();
            @RenderSection("ko_apply", required: false);
            @RenderSection("ElectronicNotifications", required: false);
            @RenderSection("User", required: false);
            @RenderSection("FileUploadRestrict", required: false);
        });
        $(function () {
            var vm1 = new IPMSROOT.ModuleViewModel();
            ko.applyBindingsWithValidation(vm1, $("#Menu")[0], { insertMessages: false, messagesOnModified: false, grouping: { deep: true } });

        });

        $(function () {
            var vm = new IPMSROOT.NotificationViewModel();
            ko.applyBindingsWithValidation(vm, $("#Header")[0], { insertMessages: false, messagesOnModified: false, grouping: { deep: true } });
            ko.applyBindingsWithValidation(vm, $("#wftask")[0], { insertMessages: false, messagesOnModified: false, grouping: { deep: true } });
            //ko.applyBindingsWithValidation(vm, $("#UlNotifications")[0], { insertMessages: false, messagesOnModified: false, grouping: { deep: true } });
        });

    </script>


</body>
</html>

